{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","App.module.css","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Nothing.jsx","App.js","redux/counter/counter-types.js","redux/counter/counter-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContacts","connect","state","value","contacts","filter","dispatch","onChange","e","actions","target","className","style","wrapper","label","name","input","type","contactListFilter","items","toLowerCase","includes","onDelBtnClick","id","map","contact","listItem","namber","number","btn","onClick","event","ContactForm","handelChange","currentTarget","setState","uuidv4","resetForm","handleSabmit","preventDefault","props","some","alert","onSubmit","this","css","title","form","autoComplete","length","Component","obj","Nothing","message","INCREMENT","DECREMENT","counterReducer","combineReducers","payload","actionTypes","step","createReducer","_","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","counter","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e7af6804.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"name\":\"Filter_name__pSTfl\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\",\"name\":\"ContactList_name__2WLgA\",\"namber\":\"ContactList_namber__xUfTY\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"title\":\"App_title__-GfWs\",\"message\":\"App_message__2vrzR\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('Contact/add');\n\nexport const deleteContact = createAction('Contact/delete');\n\nexport const filterContacts = createAction('Contact/filter');\n\n// =========== До Redux Tookit =========\n// import types from './contacts-types';\n\n// export const addContact = obj => ({\n//   type: types.ADD,\n//   payload: { ...obj },\n// });\n\n// export const deleteContact = id => ({\n//   type: types.DELETE,\n//   payload: id,\n// });\n\n// export const filterContacts = value => ({\n//   type: types.FILTER,\n//   payload: value,\n// });\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.wrapper}>\n      <label className={style.label}>\n        <span className={style.name}>Find contacts by name</span>\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = PropTypes.shape({\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}).isRequired;\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDelBtnClick }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} className={style.listItem}>\n          <span className={style.name}>{contact.name}:</span>\n          <span className={style.namber}>{contact.number}</span>\n          <button\n            className={style.btn}\n            type=\"button\"\n            id={contact.id}\n            onClick={event => onDelBtnClick(event.target.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n  onDelBtnClick: PropTypes.func.isRequired,\n}).isRequired;\n\nconst contactListFilter = (items, filter) => {\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: contactListFilter(items, filter),\n});\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items,\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  onDelBtnClick: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handelChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value, id: uuidv4() });\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleSabmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`Name \"${name}\" already exists, please enter another name.`);\n    } else this.props.onSubmit({ name, number, id: uuidv4() });\n\n    this.resetForm();\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <>\n        <div>\n          <h1 className={css.title}>Phonebook</h1>\n          <form\n            className={css.form}\n            autoComplete=\"off\"\n            onSubmit={this.handleSabmit}\n          >\n            <label className={css.label}>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <label className={css.label}>\n              Number:\n              <input\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <button type=\"submit\" className={css.btn}>\n              Add contact\n            </button>\n          </form>\n          <h2 className={css.title}>Contacts ({contacts.length})</h2>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: obj => dispatch(actions.addContact(obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport css from '../App.module.css';\n\nconst Nothing = () => {\n  return (\n    <div>\n      <h2 className={css.message}>\n        Nothing, please start creating your contact\n      </h2>\n    </div>\n  );\n};\n\nexport default Nothing;\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import Counter from './components/Counter';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Nothing from './components/Nothing';\nimport css from './App.module.css';\n\nconst App = ({ contacts }) => {\n  return (\n    <div className={css.wrapper}>\n      {/* <h1 className={css.title}>Counter</h1>\n        <Counter /> */}\n\n      <ContactForm />\n\n      {contacts.length === 0 && <Nothing />}\n\n      {contacts.length > 1 && <Filter />}\n\n      {<ContactList />}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(App);\n","export const INCREMENT = 'counter/Increment';\nexport const DECREMENT = 'counter/Decrement';\n","import { combineReducers } from 'redux';\nimport * as actionTypes from './counter-types';\n\nconst valueReduser = (state = 100, { type, payload }) => {\n  switch (type) {\n    case actionTypes.INCREMENT:\n      return state + payload;\n\n    case actionTypes.DECREMENT:\n      return state - payload;\n\n    default:\n      return state;\n  }\n};\n\nconst stepReduser = (state = 10, action) => state;\n\nconst counterReducer = combineReducers({\n  value: valueReduser,\n  step: stepReduser,\n});\n\nexport default counterReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport * as actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// =========== До Redux Tookit =========\n// import types from './contacts-types';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport counterReducer from './counter/counter-reducer';\nimport contactsReducer from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// Прослойки\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// Запись в localstorege\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__3MqSl\",\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}